<!---->
<launch>

  <env name="GAZEBO_MODEL_PATH" value="$(find lwr_gazebo)/models:GAZEBO_MODEL_PATH"/>

  <!--launch gazebo using arguments-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"   value="$(find lwr_gazebo)/worlds/lwr_kinect_room.world"/>
    <arg name="debug"        value="false" />
    <arg name="gui"          value="true" />
    <arg name="paused"       value="false" />
    <arg name="use_sim_time" value="true"  />
    <arg name="headless"     value="false" />
  </include>

  <!-- If you change the tf, remember to change also the kinect pose in the world file .sdf-->
  <node pkg="tf" type="static_transform_publisher" name="kinect1" 
	args="-1.5 -0.5 1.5 1 0 0 0 /world /kinect1_link 50" />

  <node pkg="tf" type="static_transform_publisher" name="kinect1_optical" 
	args="0 -0.020 0 0.5 0.5 0.5 0.5 /kinect1_link /kinect1_depth_optical_frame 50" />

  <node pkg="tf" type="static_transform_publisher" name="kinect2" 
	args="0.5 1.5 1.2 0.707106781 -0.707106781 0 0 /world /kinect2_link 50" />
  
  <node pkg="tf" type="static_transform_publisher" name="kinect2_optical" 
	args="0 -0.020 0 0.5 0.5 0.5 0.5 /kinect2_link /kinect2_depth_optical_frame 50" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find lwr_description)/urdf/lwr_robot.xacro'" />
  <node  name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
         args="-urdf -model luka_lwr_arm -param robot_description" />

  <!-- Robot state publisher-->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen">
  </node> 

  <!-- joint_state_controller -->
  <rosparam file="$(find lwr_gazebo)/config/lwr_joint_state_controller.yaml" command="load"/>
  <node name="joint_state_controller_spawner" pkg="controller_manager" 
        type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>  

  <!-- lwr arm controller -->
  <rosparam file="$(find lwr_gazebo)/config/lwr_arm_controller.yaml" command="load"/>
  <node name="ros_control_arm_controller_spawner" pkg="controller_manager" 
        type="controller_manager" args="spawn ros_control_arm_controller" respawn="false" output="screen">
  </node>


    
</launch>
